/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package convert;

import ChatJadro.*;
import java.awt.event.ActionEvent;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Random;
import java.util.TreeSet;
import java.util.prefs.PreferenceChangeEvent;
import java.util.prefs.PreferenceChangeListener;
import java.util.prefs.Preferences;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.KeyStroke;
import javax.swing.SwingUtilities;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.BadLocationException;

/**
 *
 * @author pawel
 */
public class ChatNook extends javax.swing.JFrame implements DocumentListener {

    /**
     * Creates new form ChatNook
     */
    public ChatNook() {
        initComponents();
        slowaZCzatu = new ArrayList<>();
        /*
         Obiekt preferencje, przechowuje ustawienia w programie i reaguje na ich zmianę.
         Zawiera dwie wartości, rzad n-gramów oraz ścieżkę do pliku bazowego.
         */
        preferencje = Preferences.userRoot().node(this.getClass().getName());
        preferencje.putInt("rzad", rzad);
        preferencje.put("path", path);
        /*
         Dopelnianie tekstu podczas pisania.
         */
        wprowadzanieTekstu.getDocument().addDocumentListener(this);
        InputMap im = wprowadzanieTekstu.getInputMap();
        ActionMap am = wprowadzanieTekstu.getActionMap();

        try {
            slownik = new Slownik("/home/pawel/NetBeansProjects/ChatNook/src/ChatJadro/wordsEn.txt");
        } catch (FileNotFoundException ex) {
            System.out.println("Nie znaleziono pliku słownika");
        }

        im.put(KeyStroke.getKeyStroke("ENTER"), potwierdzAkcje);
        am.put(potwierdzAkcje, new PotwierdzAkcje());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        panelGlowny = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        wprowadzanieTekstu = new javax.swing.JTextArea();
        wyslijBut = new javax.swing.JButton();
        UstawieniaBut = new javax.swing.JButton();
        statystykiBut = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        wiadomosci = new javax.swing.JTextArea();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ChatNook");
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        wprowadzanieTekstu.setColumns(20);
        wprowadzanieTekstu.setRows(5);
        wprowadzanieTekstu.setToolTipText("Tutaj wprowadź tekst, który chcesz wysłać.");
        wprowadzanieTekstu.setNextFocusableComponent(wprowadzanieTekstu);
        wprowadzanieTekstu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                wprowadzanieTekstuMouseClicked(evt);
            }
        });
        wprowadzanieTekstu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                wprowadzanieTekstuKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(wprowadzanieTekstu);
        wprowadzanieTekstu.setLineWrap(true);
        wprowadzanieTekstu.setWrapStyleWord(true);

        wprowadzanieTekstu.requestFocusInWindow();

        wyslijBut.setBackground(new java.awt.Color(255, 122, 0));
        wyslijBut.setText("Wyślij");
        wyslijBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wyslijButActionPerformed(evt);
            }
        });

        UstawieniaBut.setText("Ustawienia");
        UstawieniaBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UstawieniaButActionPerformed(evt);
            }
        });

        statystykiBut.setText("Statystyki");
        statystykiBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statystykiButActionPerformed(evt);
            }
        });

        wiadomosci.setColumns(20);
        wiadomosci.setRows(5);
        jScrollPane1.setViewportView(wiadomosci);
        wiadomosci.setEditable(false);
        wiadomosci.setLineWrap(true);
        wiadomosci.setWrapStyleWord(true);
        wiadomosci.setFocusable(false);

        javax.swing.GroupLayout panelGlownyLayout = new javax.swing.GroupLayout(panelGlowny);
        panelGlowny.setLayout(panelGlownyLayout);
        panelGlownyLayout.setHorizontalGroup(
            panelGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGlownyLayout.createSequentialGroup()
                .addGroup(panelGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelGlownyLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(UstawieniaBut)
                        .addGap(18, 18, 18)
                        .addComponent(statystykiBut)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(wyslijBut, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelGlownyLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(panelGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelGlownyLayout.setVerticalGroup(
            panelGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGlownyLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wyslijBut)
                    .addComponent(statystykiBut)
                    .addComponent(UstawieniaBut))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        getContentPane().add(panelGlowny);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UstawieniaButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UstawieniaButActionPerformed
        UstawieniaFrame ustawienia = new UstawieniaFrame();
        ustawienia.inicujPreferencje(preferencje.getInt("rzad", rzad), preferencje);
        preferencje.addPreferenceChangeListener(new PreferenceChangeListener() {

            @Override
            public void preferenceChange(PreferenceChangeEvent evt1) {
                if (!path.equals(preferencje.get("path", path))) {
                    System.out.println("zmiana sciezki");
                    path = preferencje.get("path", path);
                    inicjujCzat();
                }
                if (preferencje.getInt("rzad", rzad) != rzad) {
                    System.out.println("zmieniono rzad n-gramow: " + preferencje.getInt("rzad", rzad));
                    rzad = preferencje.getInt("rzad", rzad);
                    inicjujCzat();
                }
            }
        });
        ustawienia.setVisible(true);
    }//GEN-LAST:event_UstawieniaButActionPerformed

    private void statystykiButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statystykiButActionPerformed
        if (bazaLista.isEmpty()) {
            wprowadzanieTekstu.setText("Baza jest pusta, nie można wyświetlić statystyk.");
            return;
        }
        sortujBazaLista();
        Statystyki stat = new Statystyki(bazaLista, 10);
        StatystykiFrame statystykiOkno = new StatystykiFrame();
        statystykiOkno.odswiezNajczestsze(stat);
        statystykiOkno.setVisible(true);
    }//GEN-LAST:event_statystykiButActionPerformed

    private void wprowadzanieTekstuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wprowadzanieTekstuMouseClicked

    }//GEN-LAST:event_wprowadzanieTekstuMouseClicked

    private void wyslijButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wyslijButActionPerformed
        String wiadomosc = wprowadzanieTekstu.getText();
        wiadomosci.append("Ty: ");
        wiadomosci.append(wiadomosc + "\n\n");
        wprowadzanieTekstu.setText("");

        String[] wprowadzoneSlowa = wiadomosc.split(" ");

        slowaZCzatu.addAll(Arrays.asList(wprowadzoneSlowa)); // dodaje do bazy słów wprowadzonych z czatu, słowa wprowadzaone przez użytkownika

        ArrayList<String> wiadomosciList = new ArrayList<>();
        wiadomosciList.addAll(Arrays.asList(wprowadzoneSlowa));

        wprowadzNGramyDoBazy(new Wejscie(wiadomosciList, rzad));
        bazaLista = new ArrayList<>(baza); //aktualizuje liste o nowe n-gramy
//        System.out.println("\n");//do debugowania
//        wypiszNGramy();//do debugowania
        wiadomosci.append(odpisz());
    }//GEN-LAST:event_wyslijButActionPerformed

    private void wprowadzanieTekstuKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_wprowadzanieTekstuKeyTyped

    }//GEN-LAST:event_wprowadzanieTekstuKeyTyped
    /*
     Jadro czatu
     */

    private static String odpisz() {
        StringBuilder sb = new StringBuilder("X: ");
        Random rand = new Random();
        int iloscNGramow = rand.nextInt(10);
        if (iloscNGramow == 0) {
            iloscNGramow = rand.nextInt(10);
        }
        if (bazaLista.isEmpty()) {
            return sb.toString();
        }
        for (int i = 0; i < iloscNGramow; i++) {
            int index = rand.nextInt(bazaLista.size());
            sb.append(bazaLista.get(index).getNGram());
            sb.append(" ");
        }
        sb.append("\n\n");
        return sb.toString();
    }

    private static void wprowadzNGramyDoBazy(Wejscie wejscie) {
        NGram ngram = null;
        String pref;
        String suf;
        while ((pref = wejscie.nextPref()) != null && (suf = wejscie.nextSuf()) != null) {
            ngram = new NGram(pref, suf);
            baza.add(ngram);
        }
    }

    private static void sortujBazaLista() {
        bazaLista = new ArrayList<>(baza);
        bazaLista.sort(new ComparatorNGramWyst());
    }

    private static void inicjujCzat() {
        Wejscie wejscie = null;
        try {
            wejscie = new Wejscie(path, rzad);
        } catch (FileNotFoundException e) {
            System.out.println("Nie odnaleziono pliku");
        }
        baza = new TreeSet<>();
        if (wejscie != null) {
            wprowadzNGramyDoBazy(wejscie);
        }
        if (slowaZCzatu != null) {
            wprowadzNGramyDoBazy(new Wejscie(slowaZCzatu, rzad));
        }
//        wypiszNGramy(); //debug
        bazaLista = new ArrayList<>(baza);
        sortujBazaLista();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChatNook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChatNook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChatNook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChatNook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChatNook().setVisible(true);
            }
        });

        inicjujCzat();
    }

    private static void wypiszNGramy() {
        for (NGram ngram : baza) {
            System.out.println(ngram.toString());
        }
    }

    /*
     Dopelnianie tekstu podczas pisania.
     */
    @Override
    public void insertUpdate(DocumentEvent ev) {
        if (ev.getLength() != 1) {
            return;
        }

        int pos = ev.getOffset();
        String content = null;
        try {
            content = wprowadzanieTekstu.getText(0, pos + 1);
        } catch (BadLocationException e) {
            e.printStackTrace();
        }

        // Find where the word starts
        int w;
        for (w = pos; w >= 0; w--) {
            if (!Character.isLetter(content.charAt(w))) {
                break;
            }
        }
        if (pos - w < 2) {
            // Too few chars
            return;
        }

        if (content == null) {
            return;
        }

        ArrayList<String> slowaArray = slownik.getSlowa();
        String prefix = content.substring(w + 1).toLowerCase();
        slowaArray.sort(null);
        int n = Collections.binarySearch(slowaArray, prefix);
        if (n < 0 && -n <= slowaArray.size()) {
            String match = slowaArray.get(-n - 1);
            if (match.startsWith(prefix)) {
                // A completion is found
                String completion = match.substring(pos - w);
                // We cannot modify Document from within notification,
                // so we submit a task that does the change later
                SwingUtilities.invokeLater(
                        new Dopelnij(completion, pos + 1));
            }
        } else {
            // Nothing found
            tryb = Tryb.WPROWADZANIE;
        }
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
    }

    private class Dopelnij implements Runnable {

        String slowoZCzatu;
        int pozycja;

        public Dopelnij(String slowoZCzatu, int pozycja) {
            this.slowoZCzatu = slowoZCzatu;
            this.pozycja = pozycja;
        }

        @Override
        public void run() {
            wprowadzanieTekstu.insert(slowoZCzatu, pozycja);
            wprowadzanieTekstu.setCaretPosition(pozycja + slowoZCzatu.length());
            wprowadzanieTekstu.moveCaretPosition(pozycja);
            tryb = Tryb.DOPELNIANIE;
        }
    }

    private class PotwierdzAkcje extends AbstractAction {

        @Override
        public void actionPerformed(ActionEvent ev) {
            if (tryb == Tryb.DOPELNIANIE) {
                int pos = wprowadzanieTekstu.getSelectionEnd();
                wprowadzanieTekstu.insert(" ", pos);
                wprowadzanieTekstu.setCaretPosition(pos + 1);
                tryb = Tryb.WPROWADZANIE;
            } else {
                wprowadzanieTekstu.replaceSelection("\n");
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton UstawieniaBut;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panelGlowny;
    private javax.swing.JButton statystykiBut;
    private javax.swing.JTextArea wiadomosci;
    private javax.swing.JTextArea wprowadzanieTekstu;
    private javax.swing.JButton wyslijBut;
    // End of variables declaration//GEN-END:variables

    private static Preferences preferencje;
    private static String path = "/home/pawel/NetBeansProjects/ChatNook/src/ChatJadro/listy.txt";
    private static TreeSet<NGram> baza;
    private static List<NGram> bazaLista;
    private static ArrayList<String> slowaZCzatu = null;
    private static int rzad = 3;

    private static enum Tryb {

        WPROWADZANIE, DOPELNIANIE
    };
    private final String potwierdzAkcje = "confirm";
    private Tryb tryb = Tryb.WPROWADZANIE;
    private Slownik slownik;
}
